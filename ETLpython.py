# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vMJFy20-wjeaXF-L1_3ML5v3GZorrzML
"""



"""# `ETL com **Python**`

Leitura dos dados
"""

import pandas as pd

clientead = pd.read_csv('clientes.csv')
print(clientead)

"""Transformação dos dados"""

clientead_mod= clientead.merge(clientead)

!pip install openai

openai_api_key = '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'

import openai

openai.api_key = openai_api_key

def generate_ai_news(clientead):
  completion = openai.ChatCompletion.create(
    model="gpt-4",
    messages=[
      {
          "role": "system",
          "content": "email enviados."
      },
      {
          "role": "clientead",
          "content": f"Crie uma mensagem para {clientead['OwnerName']} sobre a solicitudes de contatos (máximo de 100 caracteres)"
      }
    ]
  )
  return completion.choices[0].message.content.strip('\"')

  for clientead in cliente:
    news = generate_ai_news(clientead)
  print(news)

print(generate_ai_news)

def update_user(clientes.csv):
  response = requests.put(f"{clientes.csv}",)
  return True if response.status_code == 200 else False

for clientead in cliente:
  success = update_user(clientead)
  print(f"User {"{clientes.csv}"} updated? {success}!")